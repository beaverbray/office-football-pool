"use strict";exports.id=624,exports.ids=[624],exports.modules={5382:(e,a,t)=>{t.d(a,{b:()=>o});let r=[3,7,10,14];class s{calculateSpreadDelta(e,a){return e-a}checkKeyNumberCrossing(e,a){let t=[];for(let s of r)(e>s&&a<s||e<s&&a>s)&&t.push(s),(e>-s&&a<-s||e<-s&&a>-s)&&t.push(-s);return{crosses:t.length>0,numbers:t}}checkFavoriteFlip(e,a){return e>0&&a<0||e<0&&a>0}detectLeague(e,a){for(let t of["Cardinals","Falcons","Ravens","Bills","Panthers","Bears","Bengals","Browns","Cowboys","Broncos","Lions","Packers","Texans","Colts","Jaguars","Chiefs","Raiders","Chargers","Rams","Dolphins","Vikings","Patriots","Saints","Giants","Jets","Eagles","Steelers","49ers","Seahawks","Buccaneers","Titans","Commanders","Washington"])if(e.includes(t)||a.includes(t))return"NFL";for(let t of["State","University","College","Tech","A&M","Central","Eastern","Western","Northern","Southern","Carolina","Florida","Georgia","Alabama","Auburn","Tennessee","Kentucky","Virginia","Michigan","Ohio","Penn","Texas","Oklahoma","Kansas","Iowa","UCLA","USC","Stanford","California","Oregon","Washington","Arizona","Colorado","Utah","Nevada","Hawaii","Louisiana","Mississippi","Arkansas","Missouri","Illinois","Indiana","Wisconsin","Minnesota","Nebraska","Purdue","Northwestern","Rutgers","Maryland","Boston","Syracuse","Pittsburgh","Duke","Wake Forest","NC State","Clemson","Miami","FSU","UCF","USF","Temple","Navy","Army","Air Force","Notre Dame","BYU","TCU","Baylor","SMU","Houston","Rice","Tulane","Memphis","Vanderbilt","Ole Miss","LSU"])if(e.includes(t)||a.includes(t))break;return"NCAAF"}compareGame(e,a,t=1){let r=this.calculateSpreadDelta(e.spread,a.homeSpread),s=this.checkKeyNumberCrossing(e.spread,a.homeSpread),o=this.checkFavoriteFlip(e.spread,a.homeSpread),i=a.league||this.detectLeague(a.homeTeam,a.awayTeam);return{gameId:a.gameId,homeTeam:a.homeTeam,awayTeam:a.awayTeam,gameTime:a.gameTime,league:i,picksheetSpread:e.spread,marketSpread:a.homeSpread,spreadDelta:r,crossesKeyNumber:s.crosses,keyNumbersCrossed:s.numbers,favoriteFlipped:o,confidence:t,matched:!0}}compareGames(e,a,t){let r=[],s=new Set(e.map((e,a)=>a)),o=new Set(a.map((e,a)=>a));for(let i of t){let t=e[i.picksheetIndex],n=a[i.marketIndex];t&&n&&(r.push(this.compareGame(t,n,i.confidence)),s.delete(i.picksheetIndex),o.delete(i.marketIndex))}let i=[];for(let a of Array.from(s)){let t=e[a];i.push({source:"picksheet",gameInfo:`${t.awayTeam} @ ${t.homeTeam} (${t.spread})`,reason:"No matching market game found",gameTime:t.gameTime})}for(let e of Array.from(o)){let t=a[e];i.push({source:"market",gameInfo:`${t.awayTeam} @ ${t.homeTeam} (${t.homeSpread})`,reason:"No matching picksheet game found",gameTime:t.gameTime})}let n=this.calculateKPIs(r,e.length,i.filter(e=>"picksheet"===e.source).length);return{comparisons:r,kpis:n,unmatched:i}}calculateKPIs(e,a,t){let r=e.length;if(0===r)return{totalGames:a,matchedGames:0,unmatchedGames:t,matchRate:0,avgSpreadDelta:0,medianSpreadDelta:0,p95SpreadDelta:0,stdDevSpreadDelta:0,keyNumberCrossings:0,keyNumberCrossingRate:0,favoriteFlips:0,favoriteFlipRate:0,largestDelta:null,timestamp:new Date().toISOString()};let s=e.map(e=>Math.abs(e.spreadDelta)),o=s.reduce((e,a)=>e+a,0)/s.length,i=[...s].sort((e,a)=>e-a),n=i[Math.floor(i.length/2)],l=Math.floor(.95*i.length),m=i[Math.min(l,i.length-1)],d=s.reduce((e,a)=>e+Math.pow(a-o,2),0)/s.length,c=e.filter(e=>e.crossesKeyNumber).length,h=e.filter(e=>e.favoriteFlipped).length,u=null;if(e.length>0){let a=e.reduce((e,a)=>Math.abs(a.spreadDelta)>Math.abs(e.spreadDelta)?a:e);u={gameId:a.gameId,teams:`${a.awayTeam} @ ${a.homeTeam}`,delta:a.spreadDelta}}return{totalGames:a,matchedGames:r,unmatchedGames:t,matchRate:r/a,avgSpreadDelta:Number(o.toFixed(2)),medianSpreadDelta:Number(n.toFixed(2)),p95SpreadDelta:Number(m.toFixed(2)),stdDevSpreadDelta:Number(Math.sqrt(d).toFixed(2)),keyNumberCrossings:c,keyNumberCrossingRate:Number((c/r).toFixed(3)),favoriteFlips:h,favoriteFlipRate:Number((h/r).toFixed(3)),largestDelta:u,timestamp:new Date().toISOString()}}static formatSpread(e,a){return 0===a?`${e} PK`:`${e} ${a>0?"+":""}${a}`}static getRiskLevel(e){let a=Math.abs(e);return a<=2?"low":a<=4?"medium":a<=7?"high":"critical"}static getRiskColor(e){switch(e){case"low":return"text-green-600";case"medium":return"text-yellow-600";case"high":return"text-orange-600";case"critical":return"text-red-600";default:return"text-gray-600"}}}let o=new s},2468:(e,a,t)=>{t.d(a,{Rr:()=>f,q1:()=>g});var r=t(1067);let s=process.env.THE_ODDS_API_KEY,o="https://api.the-odds-api.com/v4",i={NFL:"americanfootball_nfl",NCAAF:"americanfootball_ncaaf"},n={SPREADS:"spreads"},l={US:"us"};r.Ry({key:r.Z_(),title:r.Z_(),last_update:r.Z_()});let m=r.Ry({name:r.Z_(),price:r.Rx(),point:r.Rx().optional()}),d=r.Ry({key:r.Z_(),last_update:r.Z_(),outcomes:r.IX(m)}),c=r.Ry({id:r.Z_(),sport_key:r.Z_(),sport_title:r.Z_(),commence_time:r.Z_(),home_team:r.Z_(),away_team:r.Z_(),bookmakers:r.IX(r.Ry({key:r.Z_(),title:r.Z_(),last_update:r.Z_(),markets:r.IX(d)}))}),h=r.Ry({key:r.Z_(),group:r.Z_(),title:r.Z_(),description:r.Z_(),active:r.O7(),has_outrights:r.O7()}),u=new Map,p=0;class g{constructor(e){if(this.apiKey=e||s||"",!this.apiKey)throw Error("THE_ODDS_API_KEY is not configured")}async enforceRateLimit(){let e=Date.now()-p;e<1e3&&await new Promise(a=>setTimeout(a,1e3-e)),p=Date.now()}getCached(e){let a=u.get(e);return a&&Date.now()-a.timestamp<3e5?(console.log(`Cache hit for ${e}`),a.data):null}setCache(e,a){u.set(e,{data:a,timestamp:Date.now()})}async getSports(){let e="sports",a=this.getCached(e);if(a)return a;await this.enforceRateLimit();let t=`${o}/sports?apiKey=${this.apiKey}`,s=await fetch(t);if(!s.ok)throw Error(`Failed to fetch sports: ${s.statusText}`);let i=await s.json(),n=r.IX(h).parse(i);return this.setCache(e,n),n}async getOdds(e,a=[n.SPREADS],t=l.US,s="american"){let i=`odds-${e}-${a.join(",")}-${t}`,m=this.getCached(i);if(m)return m;await this.enforceRateLimit();let d=new URLSearchParams({apiKey:this.apiKey,regions:t,markets:a.join(","),oddsFormat:s}),h=`${o}/sports/${e}/odds?${d}`;console.log(`Fetching odds from: ${h.replace(this.apiKey,"REDACTED")}`);let u=await fetch(h);if(!u.ok){if(401===u.status)throw Error("Invalid API key");if(429===u.status)throw Error("Rate limit exceeded");throw Error(`Failed to fetch odds: ${u.statusText}`)}let p=u.headers.get("x-requests-remaining"),g=u.headers.get("x-requests-used");console.log(`API Usage - Used: ${g}, Remaining: ${p}`),p&&100>parseInt(p)&&console.warn(`⚠️ Low API requests remaining: ${p}`);let f=await u.json(),S=r.IX(c).parse(f);return this.setCache(i,S),S}async getNFLSpreads(){return this.getOdds(i.NFL,[n.SPREADS])}async getNCAASpreads(){return this.getOdds(i.NCAAF,[n.SPREADS])}async getAllSpreads(){let[e,a]=await Promise.all([this.getNFLSpreads(),this.getNCAASpreads()]);return{nfl:e,ncaaf:a}}static getBestSpread(e){let a=null,t=null,r=null,s=null;for(let o of e.bookmakers){let i=o.markets.find(e=>e.key===n.SPREADS);if(i){let n=i.outcomes.find(a=>a.name===e.home_team),l=i.outcomes.find(a=>a.name===e.away_team);if(n?.point!==void 0&&l?.point!==void 0){a=n.point,t=l.point,r=o.title,s=o.last_update;break}}}return{homeTeam:e.home_team,awayTeam:e.away_team,homeSpread:a,awaySpread:t,bookmaker:r,lastUpdate:s}}static formatOddsForDisplay(e){return e.map(e=>{let a=this.getBestSpread(e);return{gameId:e.id,homeTeam:a.homeTeam,awayTeam:a.awayTeam,homeSpread:a.homeSpread,awaySpread:a.awaySpread,gameTime:e.commence_time,bookmaker:a.bookmaker}})}static clearCache(){u.clear(),console.log("Odds API cache cleared")}}let f=()=>{if(!process.env.THE_ODDS_API_KEY)throw Error("THE_ODDS_API_KEY is not configured. Please add it to your .env file.");return new g}}};