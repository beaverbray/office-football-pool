"use strict";(()=>{var e={};e.id=154,e.ids=[154],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9315:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>p,patchFetch:()=>d,requestAsyncStorage:()=>l,routeModule:()=>T,serverHooks:()=>E,staticGenerationAsyncStorage:()=>N});var r={};a.r(r),a.d(r,{POST:()=>o});var s=a(9303),i=a(8716),A=a(670),n=a(7070),S=a(584);async function o(e){try{let{text:t}=await e.json();if(!t)return n.NextResponse.json({error:"No text provided"},{status:400});let a=S.x.parseText(t).map((e,t)=>({...e,id:`test-${t+1}`}));return n.NextResponse.json({success:!0,parsedCount:a.length,rows:a,message:"Test parse successful (database not used)"})}catch(e){return console.error("Error parsing picksheet:",e),n.NextResponse.json({error:"Failed to parse picksheet"},{status:500})}}let T=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/test-parse/route",pathname:"/api/test-parse",filename:"route",bundlePath:"app/api/test-parse/route"},resolvedPagePath:"/Users/jb/Development/office_football_pool/src/app/api/test-parse/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:l,staticGenerationAsyncStorage:N,serverHooks:E}=T,p="/api/test-parse/route";function d(){return(0,A.patchFetch)({serverHooks:E,staticGenerationAsyncStorage:N})}},584:(e,t,a)=>{a.d(t,{x:()=>r});class r{static{this.ABBREVIATIONS={"St.":"State",St:"State","U.":"University",U:"University","So.":"Southern",So:"Southern","No.":"Northern",No:"Northern","E.":"Eastern",E:"Eastern","W.":"Western",W:"Western","C.":"Central",C:"Central","Miss.":"Mississippi",Miss:"Mississippi","Mich.":"Michigan",Mich:"Michigan","Okla.":"Oklahoma",Okla:"Oklahoma","Tenn.":"Tennessee",Tenn:"Tennessee","Ala.":"Alabama",Ala:"Alabama","Ark.":"Arkansas",Ark:"Arkansas","La.":"Louisiana",La:"Louisiana","Va.":"Virginia",Va:"Virginia","Ga.":"Georgia",Ga:"Georgia","Fla.":"Florida",Fla:"Florida","N.C.":"North Carolina",NC:"North Carolina","S.C.":"South Carolina",SC:"South Carolina"}}static{this.NCAAF_PATTERNS=[/^#?\d+\s+/,/\s+\(\d+-\d+\)$/,/\s+\[\d+-\d+\]$/]}static{this.DATE_PATTERNS=[/(\d{1,2})\/(\d{1,2})\/(\d{2,4})/,/(\d{1,2})-(\d{1,2})-(\d{2,4})/,/(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday),?\s+(\d{1,2})\/(\d{1,2})/i,/(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s+(\d{1,2})\/(\d{1,2})/i]}static{this.TIME_PATTERNS=[/(\d{1,2}):(\d{2})\s*(AM|PM|am|pm)/,/(\d{1,2}):(\d{2})/,/(\d{1,2})\s*(AM|PM|am|pm)/]}static{this.SPREAD_PATTERNS=[/([+-]?\d+\.?\d*)/,/(pk|PK|pick|PICK|even|EVEN)/i]}static parseText(e){let t,a;let r=e.split("\n").map(e=>e.trim()).filter(e=>e.length>0),s=[];for(let e of r){let r=this.detectLeague(e);if(r){a=r;continue}let i=this.extractDate(e);if(i){t=i;continue}let A=this.parseGameLine(e,t,a);A&&s.push(A)}return s}static detectLeague(e){let t=e.toUpperCase();return t.includes("NFL")||t.includes("NATIONAL FOOTBALL")?"NFL":t.includes("NCAAF")||t.includes("NCAA")||t.includes("COLLEGE")||t.includes("CFB")?"NCAAF":void 0}static extractDate(e){for(let t of this.DATE_PATTERNS){let a=e.match(t);if(a){let e,t,r;return a[1]&&a[1].match(/[A-Za-z]/)?(e=parseInt(a[2]),t=parseInt(a[3]),r=new Date().getFullYear()):(e=parseInt(a[1]),t=parseInt(a[2]),(r=a[3]?parseInt(a[3]):new Date().getFullYear())<100&&(r+=2e3)),new Date(r,e-1,t)}}}static extractTime(e){for(let t of this.TIME_PATTERNS){let a=e.match(t);if(a){let e=parseInt(a[1]),t=a[2]?parseInt(a[2]):0,r=a[3];if(!r)return`${e.toString().padStart(2,"0")}:${t.toString().padStart(2,"0")}`;{let a=e;return"PM"===r.toUpperCase()&&12!==e?a+=12:"AM"===r.toUpperCase()&&12===e&&(a=0),`${a.toString().padStart(2,"0")}:${t.toString().padStart(2,"0")}`}}}}static parseGameLine(e,t,a){if(e.includes(" pt ")){let r=e.replace(/\s+/g," ").trim().match(/^\s*\d+\s+pt\s+(.+?)\s+([+-]?\d+\.?\d*|PK|pick)\s+(Mon|Tue|Wed|Thu|Fri|Sat|Sun)\s+(\d{1,2}:\d{2}\s*(?:AM|PM))\s+(.+?)\s+([+-]?\d+\.?\d*|PK|pick)\s*$/i);if(r){let[,s,i,A,n,S,o]=r,T=this.extractTeamName(s),l=this.extractTeamName(S),N=this.parseSpread(i),E=this.parseSpread(o),p=this.normalizeTeamName(T,a),d=this.normalizeTeamName(l,a),u=this.extractTime(n);return{league:a||this.inferLeague(T,l),eventDate:t,eventTime:u,awayTeamRaw:p,homeTeamRaw:d,awaySpread:N,homeSpread:E,total:void 0,rawText:e}}}let r=e.split(/(vs\.?|@|-)(?=\s)/i).map(e=>e.trim());if(r.length<3)return;let s=r[0],i=r[2],A=r.slice(3).join(" "),n=this.extractSpreads(A);if(s=this.normalizeTeamName(s,a),i=this.normalizeTeamName(i,a),s&&i)return{league:a,eventDate:t,eventTime:this.extractTime(e),awayTeamRaw:s,homeTeamRaw:i,awaySpread:n.awaySpread,homeSpread:n.homeSpread,total:n.total,rawText:e}}static extractTeamName(e){return e.replace(/\s*\(\d+-\d+\)\s*/g,"").trim().replace(/^#\d+\s+/,"").trim()}static parseSpread(e){if(!e)return;let t=e.toUpperCase();if("PK"===t||"PICK"===t||"EVEN"===t)return 0;let a=parseFloat(e);return isNaN(a)?void 0:a}static inferLeague(e,t){let a=e.toUpperCase(),r=t.toUpperCase();for(let e of["STATE","UNIVERSITY","TECH","A&M","COLLEGE","NORTHWESTERN","NORTHERN","SOUTHERN","EASTERN","WESTERN","CENTRAL","BOWLING GREEN","BALL STATE","KENT STATE","FRESNO STATE","SAN JOSE STATE","IOWA STATE","OKLAHOMA STATE","MICHIGAN STATE","MISSISSIPPI STATE","PENN STATE","ARIZONA STATE","WASHINGTON STATE","OREGON STATE","OHIO STATE","BOISE STATE","UTAH STATE","COLORADO STATE","JAMES MADISON","LIBERTY","ARMY","NAVY","AIR FORCE","VANDERBILT","DUKE","STANFORD","NORTHWESTERN","RICE","SMU","TCU","BYU","UNLV","UCLA","USC","TULANE","TULSA","TEMPLE","MEMPHIS","VIRGINIA TECH","GEORGIA TECH","LOUISIANA TECH","ALABAMA","AUBURN","GEORGIA","FLORIDA","LSU","TEXAS","OKLAHOMA","NEBRASKA","IOWA","WISCONSIN","MICHIGAN","OHIO","ILLINOIS","INDIANA","PURDUE","OREGON","CALIFORNIA","COLORADO","UTAH","CLEMSON","VIRGINIA","MARYLAND","RUTGERS","SYRACUSE","BAYLOR","ARKANSAS","MISSOURI","KENTUCKY","MISSISSIPPI","MARSHALL","TOLEDO","AKRON","HAWAII","WYOMING","UAB","UTSA","FIU","UL MONROE","CHARLOTTE","CONNECTICUT","TROY","DELAWARE","SAM HOUSTON"])if(a.includes(e)||r.includes(e))return"NCAAF";let s=0;for(let e of["BUFFALO","MIAMI","NEW ENGLAND","NY JETS","BALTIMORE","CINCINNATI","CLEVELAND","PITTSBURGH","HOUSTON","INDIANAPOLIS","JACKSONVILLE","TENNESSEE","DENVER","KANSAS CITY","LAS VEGAS","LA CHARGERS","LOS ANGELES CHARGERS","DALLAS","NY GIANTS","PHILADELPHIA","WASHINGTON","CHICAGO","DETROIT","GREEN BAY","MINNESOTA","ATLANTA","CAROLINA","NEW ORLEANS","TAMPA BAY","TAMPA","ARIZONA","LA RAMS","LOS ANGELES RAMS","SAN FRANCISCO","SEATTLE"])(a===e||r===e||a.endsWith(" "+e)||r.endsWith(" "+e))&&s++;if(s>=2)return"NFL";if(1===s){for(let e of["TAMPA","NEW YORK","LA","LOS ANGELES","SAN FRANCISCO","KANSAS CITY"])if(a.includes(e)||r.includes(e))return"NFL"}return"NCAAF"}static extractSpreads(e){let t={},a=e.match(/(?:O\/U|o\/u|OVER\/UNDER|over\/under|total|TOTAL)\s*([+-]?\d+\.?\d*)/i);a&&(t.total=parseFloat(a[1]));let r=e.match(/([+-]?\d+\.?\d*)/);if(r){let e=parseFloat(r[1]);t.homeSpread=e,t.awaySpread=-e}return e.match(/(pk|pick|even)/i)&&(t.homeSpread=0,t.awaySpread=0),t}static normalizeTeamName(e,t){let a=e.trim();for(let e of this.NCAAF_PATTERNS)a=a.replace(e,"");let r=a.includes("LA ")||"LA"===a;for(let[e,t]of Object.entries(this.ABBREVIATIONS)){if("La."===e&&r)continue;let s=RegExp(`\\b${e.replace(".","\\.")}\\b`,"gi");a=a.replace(s,t)}return"Louisiana CHARGERS"===(a=a.replace(/\s+/g," ").trim())&&(a="LA CHARGERS"),"Louisiana RAMS"===a&&(a="LA RAMS"),"Northern CAROLINA State"===a&&(a="North Carolina State"),a}static toDatabase(e,t){return e.map(e=>({source_run_id:t||null,league:e.league||null,event_date_local:e.eventDate?e.eventDate.toISOString().split("T")[0]:null,event_time_local:e.eventTime||null,home_name_raw:e.homeTeamRaw,away_name_raw:e.awayTeamRaw,home_spread_raw:e.homeSpread||null,away_spread_raw:e.awaySpread||null,total_raw:e.total||null,market:"spread",raw_text:e.rawText,metadata:{}}))}}}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[948,972],()=>a(9315));module.exports=r})();